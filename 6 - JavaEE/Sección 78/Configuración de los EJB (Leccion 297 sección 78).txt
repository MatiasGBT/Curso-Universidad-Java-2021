Características de un EJB:
- Cuando un EJB se ejecuta en un Contenedor Java EE que soporta EJB´s, el contenedor agrega los siguientes servicios
  disponibles:
  - Seguridad.
  - Llamadas asíncronas.
  - Llamadas remotas (por medio de RMI).
  - Manejo de transacciones por medio de JTA.
  - Llamadas Web Services.
  - Transacciones.
  - Inyección de dependencias (CDI).
  - Pool de conexiones.
  - Manejo de concurrencia seguro (Thread-Safety).
  - Manejo de tareas programadas (Scheduling).
  - Manejo de mensajería por medio de JMS.
  - Interceptores, permiten interceptar llamadas a métodos y agregar funcionalidad extra o complementaria por medio
    de AOP (Aspect Oriented Programming).
- Los servidores de aplicaciones Java también agregan características tales como: clustering, balance de cargas y
  tolerancia a fallos. Esto permite crear aplicaciones de misión crítica con operaciones los 7 días de la semana, las
  24 horas del día, los 365 días del año. Independientemente del tipo de servidor de aplicaciones que utilicemos
  (Glassfish, JBoss, WebSphere, etc) tendremos todas estas características disponibles al crear y desplegar EJB´s.

Configuración y tipos de EJB´s:
Se crea una clase pura de Java (.java) más el uso de anotaciones. En conjunto esto da un EJB.
- Tipos de EJB´S:
 - EJB Stateless:  Este tipo de EJB no mantiene ningún estado del usuario, es decir, no recuerda ningún tipo
   de información después de terminada una transacción. Se utiliza la anotación @Stateless. Son de los EJB´S más utilizados.
 - Stateful: Este tipo de EJB, mantiene un estado de la actividad del cliente, por ejemplo, si se tiene un carrito
   de compras. Este estado se puede recordar incluso una vez terminada la transacción, pero si el servidor se reinicia
   esta información se pierde. Es similar al alcance Session de una aplicación Web. @Stateful.
 - Singleton: Este tipo de beans utiliza el patrón de diseño Singleton, en el cual solamente existe una instancia
   en memoria de esta clase. @Singleton.
- Hay otras características que pueden tener los EJB´s, como:
 - EJB Timer:  Esta es una característica que se puede agregar a los beans, para que se ejecuten en un tiempo
   especificado, es decir, que se pueda programar (scheduling).
 - Message-driven beans (MDBs): Este tipo de beans se utiliza para enviar mensajes utilizando la tecnología JMS.
   El estudio de este tipo de beans queda fuera del alcance de este curso.
 - Entity beans:  Esta es una clasificación anterior a la versión 3 de los EJB, sin embargo al día de hoy el estándar
   JPA (Java Persistance API) ha sustituido a este tipo de beans. Así que, a menos que estemos utilizando una versión
   anterior a la versión 3, se debería utilizar JPA en lugar de los Entity Beans.